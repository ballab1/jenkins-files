<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.12.2">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>H H * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.38">
    <script>timestamps {
    node(&apos;ubuntu-s3&apos;) {
	stage (&apos;nconf&apos;) {
	    withCredentials([usernamePassword(credentialsId: &apos;1a69cdbb-be20-4bde-b30a-87ef9b2db969&apos;,
					      passwordVariable: &apos;PWRD&apos;,
					      usernameVariable: &apos;USER&apos;)
			    ]) {
		sh &quot;sudo docker exec -i mysql mysqldump --user ${USER} --password=${PWRD} nconf &gt; nconf.sql&quot;
		stash includes: &apos;nconf.sql&apos;, name: nconf
	     }
	}
	stage (&apos;phpmyadmin&apos;) {
	    withCredentials([usernamePassword(credentialsId: &apos;1a69cdbb-be20-4bde-b30a-87ef9b2db969&apos;,
					      passwordVariable: &apos;PWRD&apos;,
					      usernameVariable: &apos;USER&apos;)
			    ]) {
		sh &quot;sudo docker exec -i mysql mysqldump --user ${USER} --password=${PWRD} phpmyadmin &gt; phpmyadmin.sql&quot;
		stash includes: &apos;phpmyadmin.sql&apos;, name: phpmyadmin
	     }
	}
	stage (&apos;zen&apos;) {
	    withCredentials([usernamePassword(credentialsId: &apos;1a69cdbb-be20-4bde-b30a-87ef9b2db969&apos;,
					      passwordVariable: &apos;PWRD&apos;,
					      usernameVariable: &apos;USER&apos;)
			    ]) {
		sh &quot;sudo docker exec -i mysql mysqldump --user ${USER} --password=${PWRD} zen &gt; zen.sql&quot;
		stash includes: &apos;zen.sql&apos;, name: zen
	     }
	}
	stage (&apos;Update GIThub&apos;) {
		checkout([$class: &apos;GitSCM&apos;,
			  branches: [[name: &apos;*/master&apos;]], 
			  doGenerateSubmoduleConfigurations: false, 	
			  extensions: [], 
			  submoduleCfg: [], 
			  userRemoteConfigs: [[credentialsId: &apos;935a7b57-da74-45f7-9119-5a0529afb8ae&apos;, 
					       url: &apos;https://github.com/ballab1/DBMS-backup.git&apos;]]
			 ])
		unstash nconf
		unstash phpmyadmin
		unstash zen
		archive includes:&apos;*.sql&apos;
		sh &apos;git add -A; git comment -m &quot;mysql DB updates&quot;; git push&apos;
	}
    }
}


pipeline {
	agent { label &apos;ubuntu-s3&apos; }
	options { timestamps() }
	stages {
		stage {
			step (&apos;nconf&apos;) {
				sh &quot;sudo docker exec -i mysql mysqldump --user bobb --password=${PWRD} nconf &gt; nconf.sql&quot;
				archive opfile
				stash includes: opfile, name: nconf
			}
		}
		stage {
			step (&apos;phpmyadmin&apos;) {
				sh &quot;sudo docker exec -i mysql mysqldump --user bobb --password=${PWRD} phpmyadmin &gt; phpmyadmin.sql&quot;
				archive opfile
				stash includes: opfile, name: phpmyadmin
			}
		}
		stage {
			step (&apos;zen&apos;) {
				sh &quot;sudo docker exec -i mysql mysqldump --user bobb --password=${PWRD} zen &gt; zen.sql&quot;
				archive opfile
				stash includes: opfile, name: zen
			}
		}
		stage {
			step (&apos;Update GIThub&apos;) {
				checkout scm
				unstash nconf
				unstash phpmyadmin
				unstash zen
				archive includes:&apos;*.sql&apos;
				sh &apos;git add -A; git comment -m &quot;mysql DB updates&quot;; git push&apos;
			}
		}
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>