<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.12.2">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>H H * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.38">
    <script>def stepsForParallel = [:]

def dbNames = [&apos;nconf&apos;, &apos;phpmyadmin&apos;, &apos;zen&apos;]
for (int i=0; i&lt;dbNames.size(); ++i) {
    def dbName = dbNames[i]
    stepsForParallel[dbName] = transformIntoStep(dbName)
}
stepsForParallel[failFast] = true


// return a closure because we do not want &apos;node(..){...}&apos; execcuted when this function is called
def transformIntoStep(dbName) {
    return {
        step(&quot;${dbName}&quot;) {
            sh &quot;sudo docker exec -i mysql mysqldump --user bobb --password=${PWRD}  ${dbName} &gt; ${dbName}.sql&quot;
            archive &quot;${dbName}.sql&quot;
            stash includes: &quot;${dbName}.sql&quot;, name: dbName
        }
    }
}



pipeline {
    agent { label &apos;ubuntu-s3&apos; }
    options { timestamps() }
    // Actually run the steps in parallel - parallel takes a map as an argument,
    // hence the above.
    parallel stepsForParallel

    step (&apos;Update GIThub&apos;) {
        checkout scm
        unstash dbNames[0]
        unstash dbNames[1]
        unstash dbNames[2]
        archive includes:&apos;*.sql&apos;
        sh &apos;git add -A; git comment -m &quot;mysql DB updates&quot;; git push&apos;
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>